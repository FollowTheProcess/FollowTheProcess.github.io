<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Projects on @FollowTheProcess</title><link>https://followtheproecess.github.io/projects/</link><description>Recent content in Projects on @FollowTheProcess</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Tue, 23 Mar 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://followtheproecess.github.io/projects/index.xml" rel="self" type="application/rss+xml"/><item><title>goignore</title><link>https://followtheproecess.github.io/projects/goignore/</link><pubDate>Tue, 23 Mar 2021 00:00:00 +0000</pubDate><guid>https://followtheproecess.github.io/projects/goignore/</guid><description>An extremely simple go CLI to hit the gitignore API with whatever you pass as command line arguments. The list of things you can pass here are documented on gitignore.io.
Source Code: https://github.com/FollowTheProcess/gotoil You&amp;rsquo;ll get back a .gitignore file saved to $CWD/.gitignore with the contents generated from the API.
Installation go get -u github.com/FollowTheProcess/goignore Usage Inside the folder you want the .gitignore to live in, run:
goignore macos vscode go This will get you a .</description></item><item><title>pytoil</title><link>https://followtheproecess.github.io/projects/pytoil/</link><pubDate>Fri, 12 Mar 2021 00:00:00 +0000</pubDate><guid>https://followtheproecess.github.io/projects/pytoil/</guid><description>pytoil is a small, helpful CLI to help developers manage their local and remote projects with ease!
Source Code: https://github.com/FollowTheProcess/pytoil
Documentation: https://FollowTheProcess.github.io/pytoil/
What is it? pytoil is a handy tool that helps you stay on top of all your projects, remote or local. It&amp;rsquo;s primarily aimed at python developers but you could easily use it to manage any project!
pytoil is:
Easy to use ‚úÖ Easy to configure ‚úÖ Safe (it won&amp;rsquo;t edit your repos at all) ‚úÖ Useful!</description></item><item><title>pymechtest</title><link>https://followtheproecess.github.io/projects/pymechtest/</link><pubDate>Wed, 17 Feb 2021 00:00:00 +0000</pubDate><guid>https://followtheproecess.github.io/projects/pymechtest/</guid><description>pymechtest is a small, hopefully helpful python package to help engineers collate, process, analyse, and report on mechanical test data. I built pymechtest to help automate the things I did on a near-daily basis as a materials engineer. I hope it can prove some use to you too!
Source Code: https://github.com/FollowTheProcess/pymechtest
Documentation: https://FollowTheProcess.github.io/pymechtest/
Overview Have you ever had to process a bunch of csv output from a mechanical test machine, copying and pasting data into a hacky Excel template to calculate things like elastic modulus and yield strength?</description></item><item><title>Fatigue Damage Prediction</title><link>https://followtheproecess.github.io/projects/fatigue/</link><pubDate>Mon, 28 Sep 2020 00:00:00 +0000</pubDate><guid>https://followtheproecess.github.io/projects/fatigue/</guid><description>Using machine learning to predict fatigue crack growth under complex thermomechanical loads. Achieved a damage severity predicive accuracy of ¬±0.25mm and a positional predictive accuracy of ¬±7.0mm.
Tom Fleet, Sep 2020
Background Repeated cyclic loading of a material will eventually lead to a phenomenon called &amp;ldquo;fatigue crack growth&amp;rdquo;. I&amp;rsquo;m not going to explain the details here but I&amp;rsquo;d point you to this for more info. Essentially, a crack will start to form and repeated cyclic loading will progressively grow this crack until it is large enough such that the remaining material can no longer handle the stress and the component will break.</description></item><item><title>msg</title><link>https://followtheproecess.github.io/projects/msg/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://followtheproecess.github.io/projects/msg/</guid><description>üöÄ A lightweight console printing toolkit for Go CLIs.
Source Code: https://github.com/FollowTheProcess/msg
Free software: MIT License
Project Description Who else is bored with boring grey text in CLIs? üôã‚Äç‚ôÄÔ∏è
We all have fancy terminals, utf-8 is everywhere, no one is still using the stock windows command prompt any more&amp;hellip; are they? ü§®
When writing pytoil I discovered ines/wasabi for this exact purpose and absolutely loved it immediately:</description></item></channel></rss>