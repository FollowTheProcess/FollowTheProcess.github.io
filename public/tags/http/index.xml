<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>HTTP on @FollowTheProcess</title>
    <link>http://localhost:1313/tags/http/</link>
    <description>Recent content in HTTP on @FollowTheProcess</description>
    <generator>Hugo</generator>
    <language>en</language>
    <lastBuildDate>Mon, 25 Oct 2021 19:04:46 +0100</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/http/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Shut Down a Go HTTP Server Gracefully</title>
      <link>http://localhost:1313/posts/graceful_shutdown/</link>
      <pubDate>Mon, 25 Oct 2021 19:04:46 +0100</pubDate>
      <guid>http://localhost:1313/posts/graceful_shutdown/</guid>
      <description>&lt;p&gt;When developing HTTP services in Go, you will start and stop your server hundreds of times, think of the whole &lt;code&gt;go run main.go&lt;/code&gt; &lt;code&gt;ctrl + c&lt;/code&gt; loop!&lt;/p&gt;&#xA;&lt;p&gt;When you hit &lt;code&gt;ctrl + c&lt;/code&gt;, (on UNIX systems) your program is passed the &lt;code&gt;SIGINT&lt;/code&gt; Unix signal. The go runtime handles this and will stop your program relatively safely, but it&amp;rsquo;s not &lt;strong&gt;great&lt;/strong&gt; practice!&lt;/p&gt;&#xA;&lt;p&gt;What if you have database connection pools open or forgot to close a file etc.?&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
