<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Go on @FollowTheProcess</title>
    <link>http://localhost:1313/tags/go/</link>
    <description>Recent content in Go on @FollowTheProcess</description>
    <generator>Hugo</generator>
    <language>en</language>
    <lastBuildDate>Mon, 25 Oct 2021 19:04:46 +0100</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/go/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Shut Down a Go HTTP Server Gracefully</title>
      <link>http://localhost:1313/posts/graceful_shutdown/</link>
      <pubDate>Mon, 25 Oct 2021 19:04:46 +0100</pubDate>
      <guid>http://localhost:1313/posts/graceful_shutdown/</guid>
      <description>&lt;p&gt;When developing HTTP services in Go, you will start and stop your server hundreds of times, think of the whole &lt;code&gt;go run main.go&lt;/code&gt; &lt;code&gt;ctrl + c&lt;/code&gt; loop!&lt;/p&gt;&#xA;&lt;p&gt;When you hit &lt;code&gt;ctrl + c&lt;/code&gt;, (on UNIX systems) your program is passed the &lt;code&gt;SIGINT&lt;/code&gt; Unix signal. The go runtime handles this and will stop your program relatively safely, but it&amp;rsquo;s not &lt;strong&gt;great&lt;/strong&gt; practice!&lt;/p&gt;&#xA;&lt;p&gt;What if you have database connection pools open or forgot to close a file etc.?&lt;/p&gt;</description>
    </item>
    <item>
      <title>Using FieldsFunc in Go</title>
      <link>http://localhost:1313/posts/fieldsfunc/</link>
      <pubDate>Fri, 22 Oct 2021 20:34:50 +0100</pubDate>
      <guid>http://localhost:1313/posts/fieldsfunc/</guid>
      <description>&lt;p&gt;I&amp;rsquo;ve been playing with Go a lot recently, and one thing it lends itself &lt;strong&gt;really&lt;/strong&gt; well to is CLIs (Command Line Interfaces):&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Runs very fast, feels snappy to use&lt;/li&gt;&#xA;&lt;li&gt;Standalone, statically linked binary - easy to distribute&lt;/li&gt;&#xA;&lt;li&gt;Easy cross-compilation for multiple platforms, OS&amp;rsquo;s and processor architectures&lt;/li&gt;&#xA;&lt;li&gt;Excellent libraries for creating CLIs e.g. &lt;a href=&#34;https://github.com/spf13/cobra&#34;&gt;cobra&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;The excellent &lt;a href=&#34;https://github.com/cli/cli&#34;&gt;GitHub CLI&lt;/a&gt; is written in Go üëèüèª&lt;/p&gt;&#xA;&lt;p&gt;So needless to say, I&amp;rsquo;ve been writing more than a few CLIs: &lt;a href=&#34;https://github.com/FollowTheProcess/gotoil&#34;&gt;gotoil&lt;/a&gt;, &lt;a href=&#34;https://github.com/FollowTheProcess/tag&#34;&gt;tag&lt;/a&gt;, &lt;a href=&#34;https://github.com/FollowTheProcess/goignore&#34;&gt;goignore&lt;/a&gt; etc&amp;hellip;&lt;/p&gt;</description>
    </item>
    <item>
      <title>goignore</title>
      <link>http://localhost:1313/projects/goignore/</link>
      <pubDate>Tue, 23 Mar 2021 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/projects/goignore/</guid>
      <description>&lt;p&gt;&lt;em&gt;An extremely simple go CLI to hit the &lt;a href=&#34;https://www.toptal.com/developers/gitignore&#34;&gt;gitignore API&lt;/a&gt; with whatever you pass as command line arguments. The list of things you can pass here are documented on &lt;a href=&#34;https://www.toptal.com/developers/gitignore&#34;&gt;gitignore.io&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;Source Code&lt;/strong&gt;: &lt;a href=&#34;https://github.com/FollowTheProcess/goignore/&#34;&gt;https://github.com/FollowTheProcess/goignore&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;You&amp;rsquo;ll get back a .gitignore file saved to &lt;code&gt;$CWD/.gitignore&lt;/code&gt; with the contents generated from the API.&lt;/p&gt;&#xA;&lt;h2 id=&#34;installation&#34;&gt;Installation&lt;/h2&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;go install github.com/FollowTheProcess/goignore@latest&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;usage&#34;&gt;Usage&lt;/h2&gt;&#xA;&lt;p&gt;Inside the folder you want the &lt;code&gt;.gitignore&lt;/code&gt; to live in, run:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;goignore macos visualstudiocode go&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This will get you a &lt;code&gt;.gitignore&lt;/code&gt; file that looks like&amp;hellip;&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
