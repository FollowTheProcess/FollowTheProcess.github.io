<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>virtual environments on @FollowTheProcess</title>
    <link>https://followtheproecess.github.io/tags/virtual-environments/</link>
    <description>Recent content in virtual environments on @FollowTheProcess</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Mon, 01 Mar 2021 17:27:07 +0000</lastBuildDate><atom:link href="https://followtheproecess.github.io/tags/virtual-environments/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Automate your Virtual Environments... and everything else.</title>
      <link>https://followtheproecess.github.io/posts/auto_venv/</link>
      <pubDate>Mon, 01 Mar 2021 17:27:07 +0000</pubDate>
      
      <guid>https://followtheproecess.github.io/posts/auto_venv/</guid>
      <description>We all know virtual environments are important! But they are a bit of a pain if you do them a lot&amp;hellip;
# Make it python -m venv .venv # Activate it source .venv/bin/activate # Install/upgrade seeds python -m pip install --upgrade pip setuptools wheel # Install what you actually wanted python -m pip install things i actually wanted python -m pip install this needs to be automated Automation I LOVE automating things and given that the commands we see above have to be typed every time you start a new project, this should scream automation to you!</description>
    </item>
    
    <item>
      <title>Prevent Global Pip Installs</title>
      <link>https://followtheproecess.github.io/posts/require_venv/</link>
      <pubDate>Tue, 23 Feb 2021 14:21:11 +0000</pubDate>
      
      <guid>https://followtheproecess.github.io/posts/require_venv/</guid>
      <description>This is going to be a short one, about something I discovered in the pip documentation the other day and never knew about and I wish I did before I broke my python installation a dozen times when I was first starting out!
Problem We all know the dangers of breaking your system python installation with package conflicts.
Virtual environments are probably the most common way of avoiding nasty package conflicts.</description>
    </item>
    
    <item>
      <title>Pyenv is Awesome!</title>
      <link>https://followtheproecess.github.io/posts/pyenv/</link>
      <pubDate>Fri, 19 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>https://followtheproecess.github.io/posts/pyenv/</guid>
      <description>I think everyone who has touched python at some point has seen this picture&amp;hellip;
It&amp;rsquo;s mainly poking fun at the kinds of ways you can get your installation all screwed up if you&amp;rsquo;re not careful but is often misinterpreted as throwing shade on how python works.
Brett Cannon&amp;rsquo;s Blog Post has an excellent deconstruction of what this xkcd means and how to avoid it.
There&amp;rsquo;s lots you can do to avoid this happening to you.</description>
    </item>
    
  </channel>
</rss>
