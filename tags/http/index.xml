<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>HTTP on @FollowTheProcess</title><link>https://followtheproecess.github.io/tags/http/</link><description>Recent content in HTTP on @FollowTheProcess</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Mon, 25 Oct 2021 19:04:46 +0100</lastBuildDate><atom:link href="https://followtheproecess.github.io/tags/http/index.xml" rel="self" type="application/rss+xml"/><item><title>Shut Down a Go HTTP Server Gracefully</title><link>https://followtheproecess.github.io/posts/graceful_shutdown/</link><pubDate>Mon, 25 Oct 2021 19:04:46 +0100</pubDate><guid>https://followtheproecess.github.io/posts/graceful_shutdown/</guid><description>When developing HTTP services in Go, you will start and stop your server hundreds of times, think of the whole go run main.go ctrl + c loop!
When you hit ctrl + c, (on UNIX systems) your program is passed the SIGINT Unix signal. The go runtime handles this and will stop your program relatively safely, but it&amp;rsquo;s not great practice!
What if you have database connection pools open or forgot to close a file etc.</description></item></channel></rss>