<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>tips on @FollowTheProcess</title><link>https://followtheproecess.github.io/tags/tips/</link><description>Recent content in tips on @FollowTheProcess</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Tue, 26 Oct 2021 22:05:11 +0100</lastBuildDate><atom:link href="https://followtheproecess.github.io/tags/tips/index.xml" rel="self" type="application/rss+xml"/><item><title>Self Documenting Makefile</title><link>https://followtheproecess.github.io/posts/makefile/</link><pubDate>Tue, 26 Oct 2021 22:05:11 +0100</pubDate><guid>https://followtheproecess.github.io/posts/makefile/</guid><description>If you aren&amp;rsquo;t familiar with make, it&amp;rsquo;s a command runner and build system capable of quite complicated stuff. It&amp;rsquo;s syntax can get complicated for non-trivial workflows and it has lots of weird quirks (like .PHONY).
However, it&amp;rsquo;s ubiquitous on nearly all systems and pretty easy to get going with so it&amp;rsquo;s very widely used in all sorts of projects in just about every language.
In fact, a filename global search on GitHub yields an astonishing 112 million results!</description></item><item><title>Just > Make</title><link>https://followtheproecess.github.io/posts/just/</link><pubDate>Sun, 24 Oct 2021 10:22:23 +0100</pubDate><guid>https://followtheproecess.github.io/posts/just/</guid><description>Makefiles (GNU Make) are ubiquitous in software development and they are a fantastically useful tool! But for all but the simplest tasks, the syntax can get very unreadable and messy.
Some programs like complex C or C++ projects will use Makefiles as the full build system it was designed to be, however most people tend to use Makefiles as simple task runners.
Consider the following example for a simple Go project:</description></item><item><title>Using FieldsFunc in Go</title><link>https://followtheproecess.github.io/posts/fieldsfunc/</link><pubDate>Fri, 22 Oct 2021 20:34:50 +0100</pubDate><guid>https://followtheproecess.github.io/posts/fieldsfunc/</guid><description>I&amp;rsquo;ve been playing with Go a lot recently, and one thing it lends itself really well to is CLIs (Command Line Interfaces):
Runs very fast, feels snappy to use Standalone, statically linked binary - easy to distribute Easy cross-compilation for multiple platforms, OS&amp;rsquo;s and processor architectures Excellent libraries for creating CLIs e.g. cobra The excellent GitHub CLI is written in Go üëèüèª
So needless to say, I&amp;rsquo;ve been writing more than a few CLIs: gotoil, tag, goignore etc&amp;hellip;</description></item></channel></rss>