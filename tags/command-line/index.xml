<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Command Line on @FollowTheProcess</title><link>https://followtheprocess.github.io/tags/command-line/</link><description>Recent content in Command Line on @FollowTheProcess</description><generator>Hugo</generator><language>en</language><lastBuildDate>Sun, 24 Oct 2021 10:22:23 +0100</lastBuildDate><atom:link href="https://followtheprocess.github.io/tags/command-line/index.xml" rel="self" type="application/rss+xml"/><item><title>Just > Make</title><link>https://followtheprocess.github.io/posts/just/</link><pubDate>Sun, 24 Oct 2021 10:22:23 +0100</pubDate><guid>https://followtheprocess.github.io/posts/just/</guid><description>&lt;p>Makefiles (&lt;a href="https://www.gnu.org/software/make/">GNU Make&lt;/a>) are ubiquitous in software development and they are a fantastically useful tool! But for all but the simplest tasks, the syntax can get very unreadable and messy.&lt;/p>
&lt;p>Some programs like complex C or C++ projects will use Makefiles as the full build system it was designed to be, however most people tend to use Makefiles as simple task runners.&lt;/p>
&lt;p>Consider the following example for a simple Go project:&lt;/p></description></item></channel></rss>