<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on @FollowTheProcess</title><link>https://followtheprocess.github.io/posts/</link><description>Recent content in Posts on @FollowTheProcess</description><generator>Hugo</generator><language>en</language><lastBuildDate>Sun, 27 Mar 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://followtheprocess.github.io/posts/index.xml" rel="self" type="application/rss+xml"/><item><title>What exactly is 'Modern Python'?</title><link>https://followtheprocess.github.io/posts/modern_python/</link><pubDate>Sun, 27 Mar 2022 00:00:00 +0000</pubDate><guid>https://followtheprocess.github.io/posts/modern_python/</guid><description>&lt;p>Python is going through a huge modernisation kick in recent years with things like &lt;a href="https://www.python.org/dev/peps/pep-0484/">PEP 484 Type Hints&lt;/a>, &lt;a href="https://github.com/markshannon/faster-cpython/blob/master/plan.md">performance improvements&lt;/a> coming in 3.11 and now being able to run on &lt;a href="https://twitter.com/ethanhs/status/1464308141105967104">web assembly&lt;/a>, moving away from the hangover of python 2 and fully embracing the new style of &amp;ldquo;modern&amp;rdquo; python 3.&lt;/p>
&lt;p>The python sphere is full of posts, packages and repos claiming to use or take advantage of &amp;ldquo;modern python&amp;rdquo;&lt;/p>
&lt;p>So you may be asking&amp;hellip; what exactly do people mean when they say &amp;ldquo;modern python&amp;rdquo;? What follows is a list of what I consider to the most essential components of &amp;ldquo;modern python&amp;rdquo; and by the end hopefully you&amp;rsquo;ll want to make sure you&amp;rsquo;re doing &amp;ldquo;modern python&amp;rdquo; too!&lt;/p></description></item><item><title>Self Documenting Makefile</title><link>https://followtheprocess.github.io/posts/makefile/</link><pubDate>Tue, 26 Oct 2021 22:05:11 +0100</pubDate><guid>https://followtheprocess.github.io/posts/makefile/</guid><description>&lt;p>If you aren&amp;rsquo;t familiar with &lt;a href="https://www.gnu.org/software/make/">make&lt;/a>, it&amp;rsquo;s a command runner and build system capable of quite complicated stuff. It&amp;rsquo;s syntax can get complicated for non-trivial workflows and it has lots of weird quirks (like &lt;code>.PHONY&lt;/code>).&lt;/p>
&lt;p>However, it&amp;rsquo;s ubiquitous on nearly all systems and pretty easy to get going with so it&amp;rsquo;s very widely used in all sorts of projects in just about every language.&lt;/p>
&lt;p>In fact, a filename global search on GitHub yields an astonishing 112 million results!&lt;/p></description></item><item><title>Shut Down a Go HTTP Server Gracefully</title><link>https://followtheprocess.github.io/posts/graceful_shutdown/</link><pubDate>Mon, 25 Oct 2021 19:04:46 +0100</pubDate><guid>https://followtheprocess.github.io/posts/graceful_shutdown/</guid><description>&lt;p>When developing HTTP services in Go, you will start and stop your server hundreds of times, think of the whole &lt;code>go run main.go&lt;/code> &lt;code>ctrl + c&lt;/code> loop!&lt;/p>
&lt;p>When you hit &lt;code>ctrl + c&lt;/code>, (on UNIX systems) your program is passed the &lt;code>SIGINT&lt;/code> Unix signal. The go runtime handles this and will stop your program relatively safely, but it&amp;rsquo;s not &lt;strong>great&lt;/strong> practice!&lt;/p>
&lt;p>What if you have database connection pools open or forgot to close a file etc.?&lt;/p></description></item><item><title>Just > Make</title><link>https://followtheprocess.github.io/posts/just/</link><pubDate>Sun, 24 Oct 2021 10:22:23 +0100</pubDate><guid>https://followtheprocess.github.io/posts/just/</guid><description>&lt;p>Makefiles (&lt;a href="https://www.gnu.org/software/make/">GNU Make&lt;/a>) are ubiquitous in software development and they are a fantastically useful tool! But for all but the simplest tasks, the syntax can get very unreadable and messy.&lt;/p>
&lt;p>Some programs like complex C or C++ projects will use Makefiles as the full build system it was designed to be, however most people tend to use Makefiles as simple task runners.&lt;/p>
&lt;p>Consider the following example for a simple Go project:&lt;/p></description></item><item><title>Using FieldsFunc in Go</title><link>https://followtheprocess.github.io/posts/fieldsfunc/</link><pubDate>Fri, 22 Oct 2021 20:34:50 +0100</pubDate><guid>https://followtheprocess.github.io/posts/fieldsfunc/</guid><description>&lt;p>I&amp;rsquo;ve been playing with Go a lot recently, and one thing it lends itself &lt;strong>really&lt;/strong> well to is CLIs (Command Line Interfaces):&lt;/p>
&lt;ul>
&lt;li>Runs very fast, feels snappy to use&lt;/li>
&lt;li>Standalone, statically linked binary - easy to distribute&lt;/li>
&lt;li>Easy cross-compilation for multiple platforms, OS&amp;rsquo;s and processor architectures&lt;/li>
&lt;li>Excellent libraries for creating CLIs e.g. &lt;a href="https://github.com/spf13/cobra">cobra&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>The excellent &lt;a href="https://github.com/cli/cli">GitHub CLI&lt;/a> is written in Go 👏🏻&lt;/p>
&lt;p>So needless to say, I&amp;rsquo;ve been writing more than a few CLIs: &lt;a href="https://github.com/FollowTheProcess/gotoil">gotoil&lt;/a>, &lt;a href="https://github.com/FollowTheProcess/tag">tag&lt;/a>, &lt;a href="https://github.com/FollowTheProcess/goignore">goignore&lt;/a> etc&amp;hellip;&lt;/p></description></item><item><title>Automate your Virtual Environments... and everything else.</title><link>https://followtheprocess.github.io/posts/auto_venv/</link><pubDate>Mon, 01 Mar 2021 17:27:07 +0000</pubDate><guid>https://followtheprocess.github.io/posts/auto_venv/</guid><description>&lt;p>We all know virtual environments are important! But they are a bit of a pain if you do them a lot&amp;hellip;&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8b949e;font-style:italic"># Make it&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>python -m venv .venv
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8b949e;font-style:italic"># Activate it&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>source .venv/bin/activate
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8b949e;font-style:italic"># Install/upgrade seeds&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>python -m pip install --upgrade pip setuptools wheel
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8b949e;font-style:italic"># Install what you actually wanted&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>python -m pip install things i actually wanted
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>python -m pip install this needs to be automated
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="automation">Automation&lt;/h2>
&lt;p>I &lt;strong>LOVE&lt;/strong> automating things and given that the commands we see above have to be typed &lt;em>every time&lt;/em> you start a new project, this should scream automation to you!&lt;/p></description></item><item><title>Prevent Global Pip Installs</title><link>https://followtheprocess.github.io/posts/require_venv/</link><pubDate>Tue, 23 Feb 2021 14:21:11 +0000</pubDate><guid>https://followtheprocess.github.io/posts/require_venv/</guid><description>&lt;p>This is going to be a short one, about something I discovered in the &lt;a href="https://pip.pypa.io/en/stable/">pip&lt;/a> documentation the other day and never knew about and I wish I did before I broke my python installation a dozen times when I was first starting out!&lt;/p>
&lt;h2 id="problem">Problem&lt;/h2>
&lt;p>We all know the dangers of breaking your system python installation with package conflicts.&lt;/p>
&lt;p>Virtual environments are probably the most common way of avoiding nasty package conflicts. A virtual environment is effectively (but not exactly) a self contained version of python you can install packages into without touching your system python.&lt;/p></description></item><item><title>Pyenv is Awesome!</title><link>https://followtheprocess.github.io/posts/pyenv/</link><pubDate>Fri, 19 Feb 2021 00:00:00 +0000</pubDate><guid>https://followtheprocess.github.io/posts/pyenv/</guid><description>&lt;p>I think everyone who has touched python at some point has seen this picture&amp;hellip;&lt;/p>
&lt;p>&lt;img src="https://followtheprocess.github.io/images/posts/python_environment.png" alt="environment hell">&lt;/p>
&lt;p>It&amp;rsquo;s mainly poking fun at the kinds of ways you can get your installation all screwed up if you&amp;rsquo;re not careful but is often misinterpreted as throwing shade on how python works.&lt;/p>
&lt;p>&lt;a href="https://snarky.ca/deconstructing-xkcd-com-1987/">Brett Cannon&amp;rsquo;s Blog Post&lt;/a> has an excellent deconstruction of what this xkcd means and how to avoid it.&lt;/p>
&lt;p>There&amp;rsquo;s lots you can do to avoid this happening to you. My favourite method is &lt;a href="https://github.com/pyenv/pyenv">pyenv&lt;/a>.&lt;/p></description></item><item><title>Buggy Accelerate Backend</title><link>https://followtheprocess.github.io/posts/buggy_accelerate/</link><pubDate>Tue, 16 Feb 2021 00:00:00 +0000</pubDate><guid>https://followtheprocess.github.io/posts/buggy_accelerate/</guid><description>&lt;p>If you work on macOS and use &lt;a href="https://numpy.org">numpy&lt;/a>, chances are at some point you may have had some very confusing error message appear about &amp;ldquo;buggy accelerate backend&amp;hellip; something something&amp;hellip; polyfit sanity check.&amp;rdquo;&lt;/p>
&lt;p>If you&amp;rsquo;ve not had the joy of running into this particular error: &lt;a href="https://github.com/numpy/numpy/issues/15947">https://github.com/numpy/numpy/issues/15947&lt;/a> I don&amp;rsquo;t envy you.&lt;/p>
&lt;p>There&amp;rsquo;s quite a lot of information on the GitHub issue thread about it and on stack overflow etc and honestly you should look at that for a better explanation, those people know far more than me! There&amp;rsquo;s lots of informed discussion on exactly &lt;em>why&lt;/em> this error is raised which I&amp;rsquo;m not going to go into here.&lt;/p></description></item></channel></rss>